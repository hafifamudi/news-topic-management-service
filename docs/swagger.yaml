basePath: /v1/api
definitions:
  common.NewsResource:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      status:
        type: string
      title:
        type: string
      topics:
        items:
          $ref: '#/definitions/common.TopicResource'
        type: array
      updated_at:
        type: string
    type: object
  common.SuccessWithMessageResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  common.TopicResource:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      news:
        items:
          $ref: '#/definitions/common.NewsResource'
        type: array
      updated_at:
        type: string
    type: object
  request.CreateNewsRequest:
    properties:
      content:
        type: string
      status:
        enum:
        - draft
        - published
        type: string
      title:
        type: string
      topic_ids:
        items:
          type: string
        type: array
    required:
    - content
    - status
    - title
    type: object
  request.CreateTopicRequest:
    properties:
      name:
        minLength: 3
        type: string
    required:
    - name
    type: object
  request.UpdateNewsRequest:
    properties:
      content:
        type: string
      status:
        type: string
      title:
        type: string
      topic_ids:
        items:
          type: string
        type: array
    type: object
  request.UpdateTopicRequest:
    properties:
      name:
        minLength: 3
        type: string
    required:
    - name
    type: object
info:
  contact:
    email: hafifcyber@gmail.com
    name: Hafif Nur Muhammad
    url: https://hafifamudi.github.io/
  description: This News Topic Management service API.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: News Topic Management API
  version: "1.0"
paths:
  /news:
    get:
      consumes:
      - application/json
      description: Retrieve all News items with optional filtering by status or topic
      parameters:
      - description: Filter by status
        in: query
        name: status
        type: string
      - description: Filter by Topic ID
        in: query
        name: topicID
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/common.NewsResource'
                  type: array
              type: object
      tags:
      - News
    post:
      consumes:
      - application/json
      description: Create News with the provided information
      parameters:
      - description: Create News Request
        in: body
        name: CreateNewsRequest
        required: true
        schema:
          $ref: '#/definitions/request.CreateNewsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.NewsResource'
              type: object
      tags:
      - News
  /news/{id}:
    delete:
      consumes:
      - application/json
      description: Delete News with the provided News ID
      parameters:
      - description: News ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.NewsResource'
              type: object
      tags:
      - News
    get:
      description: Detail News with the provided information
      parameters:
      - description: News ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.NewsResource'
              type: object
      tags:
      - News
    put:
      consumes:
      - application/json
      description: Update existing News with the provided information
      parameters:
      - description: News ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Update News
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/request.UpdateNewsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.NewsResource'
              type: object
      tags:
      - News
  /topics:
    get:
      consumes:
      - application/json
      description: List all topics with related topic
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/common.TopicResource'
                  type: array
              type: object
      tags:
      - Topics
    post:
      consumes:
      - application/json
      description: Create a new Topic with the provided information
      parameters:
      - description: Create Topic
        in: body
        name: topic
        required: true
        schema:
          $ref: '#/definitions/request.CreateTopicRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.TopicResource'
              type: object
      tags:
      - Topics
  /topics/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a Topic with the provided Topic ID
      parameters:
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.TopicResource'
              type: object
      tags:
      - Topics
    get:
      description: Detail Topic with the provided information
      parameters:
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.TopicResource'
              type: object
      tags:
      - Topics
    put:
      consumes:
      - application/json
      description: Update an existing Topic with the provided information
      parameters:
      - description: Topic ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Update Topic
        in: body
        name: topic
        required: true
        schema:
          $ref: '#/definitions/request.UpdateTopicRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/common.SuccessWithMessageResponse'
            - properties:
                data:
                  $ref: '#/definitions/common.TopicResource'
              type: object
      tags:
      - Topics
swagger: "2.0"
