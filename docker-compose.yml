version: '3.8'

services:
  app:
    build: .
    ports:
      - "3333:3333"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_CLIENT: postgresql
      DB_USERNAME: postgres
      DB_PASSWORD: rootuser
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: news_topic_management_service
      APP_ENV: DEVELOPMENT_DOCKER
      APP_NAME: NEWS_TOPIC_MANAGEMENT_SERVICE
    networks:
      - app-network

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rootuser
      POSTGRES_DB: news_topic_management_service
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:1.56
    ports:
      - "16686:16686"  # Jaeger UI
      - "6831:6831/udp"  # For receiving traces from clients
      - "4317:4317"  # For OTLP gRPC protocol (OpenTelemetry)
      - "4318:4318"  # For OTLP HTTP protocol (OpenTelemetry)
    networks:
      - app-network

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - app-network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/promtail-config.yml
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:

